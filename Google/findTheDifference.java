/**
* Find the Difference
* Given two strings s and t which consist of only lowercase letters.
* String t is generated by random shuffling string s and then add one more letter at a random position.
* Find the letter that was added in t.
* example: s = "abcd" t = "abcde" => 'e'

* Time complexity:
* Space complexity:
*/

public class Solution {
    /**
     * @param s: a string
     * @param t: a string
     * @return: the letter that was added in t
     */
    public char findTheDifference(String s, String t) {
        // Write your code here

        Map<Character, Integer> map = new HashMap<>();
        for (int i = 0; i < s.length(); i ++) {
            if (!map.containsKey(s.charAt(i))) {
                map.put(s.charAt(i), 0);
            }
            map.put(s.charAt(i), map.get(s.charAt(i)) + 1);
        }

        for (int i = 0; i < t.length(); i ++) {
            if (!map.containsKey(t.charAt(i))) {
                return t.charAt(i);
            }
            int count = map.get(t.charAt(i));
            if (count <= 0) {
                return t.charAt(i);
            }
            map.put(t.charAt(i), map.get(t.charAt(i)) - 1);
        }

        return ' ';
    }
}
